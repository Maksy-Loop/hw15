-- создаем бд со списком уникальных цветов животных
CREATE TABLE color
(
    color_id INTEGER PRIMARY KEY AUTOINCREMENT,
    color_name VARCHAR(50)
);

INSERT INTO color (color_name)
SELECT distinct RTRIM(color1)
FROM animals
WHERE color1 is not null

union

SELECT distinct RTRIM(color2)
FROM animals
WHERE color2 is not null;


-- создаем бд со списком животных
CREATE TABLE animals_list
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    animal_id VARCHAR(50),
    name VARCHAR(50),
    breed VARCHAR(100),
    date_of_birth DATE

);

INSERT INTO animals_list (animal_id, name, breed, date_of_birth)
SELECT distinct animal_id, name, breed, date_of_birth
FROM animals;


--создаем бд с типом животного
CREATE TABLE type
(
    type_id INTEGER PRIMARY KEY AUTOINCREMENT,
    animal_type VARCHAR(50)

);

INSERT INTO type (animal_type)
SELECT distinct animal_type
FROM animals;


-- создаем дазу данных с программами в которых учавствуют животные
CREATE TABLE outcome_subtype
(
    outcome_subtype_id INTEGER PRIMARY KEY AUTOINCREMENT,
    outcome_subtype VARCHAR(100)

);

INSERT INTO outcome_subtype (outcome_subtype)
SELECT distinct RTRIM(outcome_subtype)
FROM animals
WHERE outcome_subtype is not null;


-- создаем дазу данных что сейчас с животным
CREATE TABLE outcome_type
(
    outcome_type_id INTEGER PRIMARY KEY AUTOINCREMENT,
    outcome_type VARCHAR(100)

);

INSERT INTO outcome_type (outcome_type)
SELECT distinct RTRIM(outcome_type)
FROM animals
WHERE outcome_type is not null;

DROP TABLE fin_ledger;

-- создаем финальную таблицу посещений с ранее созданных таблиц
CREATE TABLE fin_ledger
(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    animal_id VARCHAR(50),
    type_id INTEGER,
    color1_id INTEGER,
    outcome_type_id INTEGER,
    outcome_subtype_id VARCHAR(100),
    name VARCHAR(50),
    breed VARCHAR(100),
    date_of_birth DATE

);

INSERT INTO fin_ledger (animal_id, type_id, color1_id, outcome_type_id, outcome_subtype_id, name, breed, date_of_birth)
SELECT al.animal_id, type.type_id, color_id as color1_id, ot.outcome_type_id,
       os.outcome_subtype_id, al.name, al.breed, al.date_of_birth

FROM animals
LEFT JOIN color on RTRIM(animals.color1) = color.color_name
LEFT JOIN type on animals.animal_type = type.animal_type
LEFT JOIN outcome_type ot on animals.outcome_type = ot.outcome_type
LEFT JOIN outcome_subtype os on animals.outcome_subtype = os.outcome_subtype
LEFT JOIN animals_list al on animals.animal_id = al.animal_id